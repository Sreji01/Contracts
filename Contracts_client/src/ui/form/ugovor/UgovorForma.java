/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.form.ugovor;

import domain.Ugovor;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import table.models.ModelTabeleUgovor;
import ui.controller.Kontroller;

/**
 *
 * @author Marko
 */
public class UgovorForma extends javax.swing.JFrame {

    private List<Ugovor> ugovori = new ArrayList<>();
    private Ugovor selektovaniUgovor;
    private int ukupanBrojUgovora = 0;
    private String imePrezime;

    /**
     * Creates new form UgovorForma
     */
    public UgovorForma() throws Exception {
        initComponents();
        setLocationRelativeTo(null);
        postaviKoloneTabeleUgovor();
        ukupanBrojUgovora = Kontroller.getInstance().ucitajListuUgovora().size();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jTextFieldImeIPrezime = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUgovori = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jButtonNadjiUgovore = new javax.swing.JButton();
        jButtonUcitajUgovor = new javax.swing.JButton();
        jButtonObrisiUgovor = new javax.swing.JButton();
        jButtonIzmeniUgovor = new javax.swing.JButton();
        jButtonOsveziTabelu = new javax.swing.JButton();
        jButtonZavrsiRad = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemObicanTransfer = new javax.swing.JMenuItem();

        jMenu2.setText("File");
        jMenuBar2.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar2.add(jMenu3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldImeIPrezime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldImeIPrezimeActionPerformed(evt);
            }
        });
        jTextFieldImeIPrezime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldImeIPrezimeKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldImeIPrezimeKeyTyped(evt);
            }
        });

        jTableUgovori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableUgovori);

        jLabel1.setText("Unesite igraca:");

        jButtonNadjiUgovore.setText("Pronadji ugovore");
        jButtonNadjiUgovore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNadjiUgovoreActionPerformed(evt);
            }
        });

        jButtonUcitajUgovor.setText("Ucitaj ugovor");
        jButtonUcitajUgovor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUcitajUgovorActionPerformed(evt);
            }
        });

        jButtonObrisiUgovor.setText("Obrisi ugovor");
        jButtonObrisiUgovor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiUgovorActionPerformed(evt);
            }
        });

        jButtonIzmeniUgovor.setText("Izmeni ugovor");
        jButtonIzmeniUgovor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniUgovorActionPerformed(evt);
            }
        });

        jButtonOsveziTabelu.setText("Osvezi tabelu");
        jButtonOsveziTabelu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOsveziTabeluActionPerformed(evt);
            }
        });

        jButtonZavrsiRad.setText("Zavrsi rad");
        jButtonZavrsiRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZavrsiRadActionPerformed(evt);
            }
        });

        jMenu1.setText("Kreiranje ugovora");
        jMenu1.setMinimumSize(new java.awt.Dimension(115, 22));

        jMenuItemObicanTransfer.setText("Obican transfer");
        jMenuItemObicanTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemObicanTransferActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItemObicanTransfer);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonObrisiUgovor)
                    .addComponent(jButtonIzmeniUgovor)
                    .addComponent(jButtonUcitajUgovor))
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addComponent(jTextFieldImeIPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jButtonNadjiUgovore)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonOsveziTabelu)
                .addGap(29, 29, 29))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonZavrsiRad)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldImeIPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonNadjiUgovore)
                    .addComponent(jButtonOsveziTabelu))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButtonUcitajUgovor)
                        .addGap(28, 28, 28)
                        .addComponent(jButtonIzmeniUgovor)
                        .addGap(28, 28, 28)
                        .addComponent(jButtonObrisiUgovor))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jButtonZavrsiRad)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldImeIPrezimeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldImeIPrezimeKeyTyped

    }//GEN-LAST:event_jTextFieldImeIPrezimeKeyTyped

    private void jTextFieldImeIPrezimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldImeIPrezimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldImeIPrezimeActionPerformed

    private void jTextFieldImeIPrezimeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldImeIPrezimeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldImeIPrezimeKeyPressed

    private void jButtonNadjiUgovoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNadjiUgovoreActionPerformed
        try {
            if (jTextFieldImeIPrezime.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nise uneli vrednost za pretrazivanje!", "Upozorenje", JOptionPane.WARNING_MESSAGE);
                return;
            }
            imePrezime = jTextFieldImeIPrezime.getText();
            List<Object> objekti = new ArrayList<>();
            objekti.add(ugovori);
            objekti.add(imePrezime);
            ugovori = Kontroller.getInstance().nadjiUgovore(objekti);
            postaviModelTabeleUgovor();
            JOptionPane.showMessageDialog(this, "Sistem je nasao ugovore po zadatoj vrednosti!", "Greska", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ugovori = null;
            postaviModelTabeleUgovor();
            JOptionPane.showMessageDialog(this, "Sistem ne moze da nadje ugovore po zadatoj vrednosti!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonNadjiUgovoreActionPerformed

    private void jButtonUcitajUgovorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUcitajUgovorActionPerformed
        try {
            int selektovaniRed = jTableUgovori.getSelectedRow();
            if (selektovaniRed == -1) {
                JOptionPane.showMessageDialog(this, "Niste izabrali ugovor!", "Upozorenje", JOptionPane.WARNING_MESSAGE);
                return;
            }
            selektovaniUgovor = ugovori.get(selektovaniRed);
            selektovaniUgovor = Kontroller.getInstance().ucitajUgovor(selektovaniUgovor);
            JOptionPane.showMessageDialog(this, "Sistem je ucitao uovor!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
            JOptionPane.showMessageDialog(this, selektovaniUgovor.toString(), "Informacije o ugovoru", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita ugovor!", "Greska!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jButtonUcitajUgovorActionPerformed

    private void jMenuItemObicanTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemObicanTransferActionPerformed
        try {
            ObicanTransferForma otf = new ObicanTransferForma();
            otf.setUf(this);
            otf.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(UgovorForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemObicanTransferActionPerformed

    private void jButtonObrisiUgovorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiUgovorActionPerformed
        try {
            int selektovaniRed = jTableUgovori.getSelectedRow();
            if (selektovaniRed == -1) {
                JOptionPane.showMessageDialog(this, "Niste izabrali ugovor!", "Upozorenje", JOptionPane.WARNING_MESSAGE);
                return;
            }
            selektovaniUgovor = ugovori.get(selektovaniRed);
            selektovaniUgovor = Kontroller.getInstance().ucitajUgovor(selektovaniUgovor);
            ModifikacijaUgovoraForma buf = new ModifikacijaUgovoraForma();
            buf.setUf(this);
            buf.popuniPoljaBrisanje(selektovaniUgovor);
            buf.getjButtonObrisi().setVisible(true);
            buf.getjButtonIzmeni().setVisible(false);
            buf.setVisible(true);
            buf.obavestiKorisnika();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita ugovor!", "Greska!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonObrisiUgovorActionPerformed

    private void jButtonIzmeniUgovorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniUgovorActionPerformed
        try {
            int selektovaniRed = jTableUgovori.getSelectedRow();
            if (selektovaniRed == -1) {
                JOptionPane.showMessageDialog(this, "Niste izabrali ugovor!", "Upozorenje", JOptionPane.WARNING_MESSAGE);
                return;
            }
            selektovaniUgovor = ugovori.get(selektovaniRed);
            selektovaniUgovor = Kontroller.getInstance().ucitajUgovor(selektovaniUgovor);
            ModifikacijaUgovoraForma muf = new ModifikacijaUgovoraForma();
            muf.popuniPoljaIzmena(selektovaniUgovor);
            muf.getjButtonObrisi().setVisible(false);
            muf.getjButtonIzmeni().setVisible(true);
            muf.setUf(this);
            muf.setVisible(true);
            muf.obavestiKorisnika();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita ugovor!", "Greska!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonIzmeniUgovorActionPerformed

    private void jButtonOsveziTabeluActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOsveziTabeluActionPerformed
        try {
            jTextFieldImeIPrezime.setText("");
            postaviKoloneTabeleUgovor();
        } catch (Exception ex) {
            Logger.getLogger(UgovorForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonOsveziTabeluActionPerformed

    private void jButtonZavrsiRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZavrsiRadActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonZavrsiRadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UgovorForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UgovorForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UgovorForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UgovorForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new UgovorForma().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(UgovorForma.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIzmeniUgovor;
    private javax.swing.JButton jButtonNadjiUgovore;
    private javax.swing.JButton jButtonObrisiUgovor;
    private javax.swing.JButton jButtonOsveziTabelu;
    private javax.swing.JButton jButtonUcitajUgovor;
    private javax.swing.JButton jButtonZavrsiRad;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItemObicanTransfer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableUgovori;
    private javax.swing.JTextField jTextFieldImeIPrezime;
    // End of variables declaration//GEN-END:variables

    void postaviUkupanBrojUgovora() {
        try {
            ukupanBrojUgovora = Kontroller.getInstance().ucitajListuUgovora().size();
        } catch (Exception ex) {
            Logger.getLogger(UgovorForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void postaviKoloneTabeleUgovor() throws Exception {
        ugovori = Kontroller.getInstance().ucitajListuUgovora();
        postaviModelTabeleUgovor();
    }

    private void postaviModelTabeleUgovor() {
        ModelTabeleUgovor mtu = new ModelTabeleUgovor(ugovori);
        jTableUgovori.setModel(mtu);
        jTableUgovori.getColumnModel().getColumn(0).setPreferredWidth(10);

    }

    void osveziTabelu() {
        System.out.println(ugovori);
        System.out.println(ukupanBrojUgovora);
        try {
            if (ugovori.size() == ukupanBrojUgovora) {
                ugovori = Kontroller.getInstance().ucitajListuUgovora();
            } else {
                List<Object> objekti = new ArrayList<>();
                objekti.add(ugovori);
                objekti.add(imePrezime);
                ugovori = Kontroller.getInstance().nadjiUgovore(objekti);
            }
            postaviModelTabeleUgovor();
        } catch (Exception ex) {
            Logger.getLogger(UgovorForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
