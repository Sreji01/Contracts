/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.form.ugovor;

import domain.Igrac;
import domain.Klub;
import domain.StavkaUgovora;
import domain.Ugovor;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import table.models.ModelTabeleStavkaUgovora;
import ui.controller.Kontroller;

/**
 *
 * @author Marko
 */
public class ModifikacijaUgovoraForma extends javax.swing.JFrame {

    private Ugovor selektovaniUgovor;
    private List<Igrac> igraci = new ArrayList<>();
    private List<Klub> klubovi = new ArrayList<>();
    private ModelTabeleStavkaUgovora mts;
    private List<StavkaUgovora> stavkeUgovora = new ArrayList<>();
    private UgovorForma uf;

    /**
     * Creates new form BrisanjeUgovoraForma
     */
    public ModifikacijaUgovoraForma() throws Exception {
        initComponents();
        popuniComboBoxeve();
        setLocationRelativeTo(null);
    }

    public UgovorForma getUf() {
        return uf;
    }

    public void setUf(UgovorForma uf) {
        this.uf = uf;
    }

    public JButton getjButtonIzmeni() {
        return jButtonIzmeni;
    }

    public void setjButtonIzmeni(JButton jButtonIzmeni) {
        this.jButtonIzmeni = jButtonIzmeni;
    }

    public JButton getjButtonObrisi() {
        return jButtonObrisi;
    }

    public void setjButtonObrisi(JButton jButtonObrisi) {
        this.jButtonObrisi = jButtonObrisi;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxIgraci = new javax.swing.JComboBox<>();
        jComboBoxNapusteniKlubovi = new javax.swing.JComboBox<>();
        jComboBoxPridruzeniKlubovi = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableStavkeUgovora = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jButtonObrisi = new javax.swing.JButton();
        jButtonZavrsiRad = new javax.swing.JButton();
        jButtonIzmeni = new javax.swing.JButton();
        jButtonDodajStavku = new javax.swing.JButton();
        jButtonObrisiStavku = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Igrac:");

        jLabel2.setText("Napusteni klub:");

        jLabel3.setText("Pridruzeni klub:");

        jComboBoxIgraci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxIgraciActionPerformed(evt);
            }
        });

        jTableStavkeUgovora.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jTableStavkeUgovora.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableStavkeUgovoraMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableStavkeUgovora);

        jLabel5.setText("Stavke ugovora:");

        jButtonObrisi.setText("Obrisi");
        jButtonObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiActionPerformed(evt);
            }
        });

        jButtonZavrsiRad.setText("Zavrsi rad");
        jButtonZavrsiRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZavrsiRadActionPerformed(evt);
            }
        });

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        jButtonDodajStavku.setText("Dodaj stavku");
        jButtonDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajStavkuActionPerformed(evt);
            }
        });

        jButtonObrisiStavku.setText("Obrisi stavku");
        jButtonObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiStavkuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxPridruzeniKlubovi, 0, 152, Short.MAX_VALUE)
                                    .addComponent(jComboBoxNapusteniKlubovi, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxIgraci, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel5))
                        .addContainerGap(193, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonIzmeni)
                        .addGap(32, 32, 32)
                        .addComponent(jButtonObrisi)
                        .addGap(191, 191, 191))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonDodajStavku)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButtonObrisiStavku)
                                .addComponent(jButtonZavrsiRad)))
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxIgraci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxNapusteniKlubovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBoxPridruzeniKlubovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonObrisi)
                            .addComponent(jButtonIzmeni))
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonDodajStavku)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonObrisiStavku)
                        .addGap(72, 72, 72)
                        .addComponent(jButtonZavrsiRad)
                        .addGap(20, 20, 20))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxIgraciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxIgraciActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxIgraciActionPerformed

    private void jTableStavkeUgovoraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableStavkeUgovoraMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableStavkeUgovoraMouseClicked

    private void jButtonObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiActionPerformed
        try {
            Ugovor ugovor = new Ugovor();
            ugovor.setId(selektovaniUgovor.getId());
            stavkeUgovora = mts.getStavkeUgovora();
            ugovor.setStavkeUgovora(stavkeUgovora);
            Kontroller.getInstance().obrisiUgovor(ugovor);
            uf.postaviKoloneTabeleUgovor();
            JOptionPane.showMessageDialog(this, "Sistem je obrisao uovor!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da obrise ugovor!", "Greska!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonObrisiActionPerformed

    private void jButtonZavrsiRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZavrsiRadActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonZavrsiRadActionPerformed

    private void jButtonDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajStavkuActionPerformed
        StavkaUgovora stavkaUgovora = new StavkaUgovora();
        mts.dodajStavku(stavkaUgovora);
    }//GEN-LAST:event_jButtonDodajStavkuActionPerformed

    private void jButtonObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiStavkuActionPerformed
        int selektovaniRed = jTableStavkeUgovora.getSelectedRow();
        if (selektovaniRed == -1) {
            JOptionPane.showMessageDialog(this, "Niste izabrali stavku ugovora!", "Upozorenje", JOptionPane.WARNING_MESSAGE);
            return;
        }
        mts.obrisiStavku(selektovaniRed);
    }//GEN-LAST:event_jButtonObrisiStavkuActionPerformed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        try {
            int id = selektovaniUgovor.getId();
            Igrac igrac = (Igrac) jComboBoxIgraci.getSelectedItem();
            Object odlazeciKlub = jComboBoxNapusteniKlubovi.getSelectedItem();
            Object dolazeciKlub = jComboBoxPridruzeniKlubovi.getSelectedItem();
            Klub napusteniKlub;
            Klub pridruzeniKlub;
            if (odlazeciKlub.equals("--Slobodan igrac--")) {
                napusteniKlub = new Klub();
                napusteniKlub.setNaziv("--Slobodan igrac--");
            } else {
                napusteniKlub = (Klub) odlazeciKlub;
            }
            if (dolazeciKlub.equals("--Slobodan igrac--")) {
                pridruzeniKlub = new Klub();
                pridruzeniKlub.setNaziv("--Slobodan igrac--");
            } else {
                pridruzeniKlub = (Klub) dolazeciKlub;
            }
            stavkeUgovora = mts.getStavkeUgovora();
            Ugovor ugovor = new Ugovor(id, igrac, napusteniKlub, pridruzeniKlub, stavkeUgovora);
            Kontroller.getInstance().izmeniUgovor(ugovor);
            uf.osveziTabelu();
            JOptionPane.showMessageDialog(this, "Sistem je izmenio ugovor!", "Potvrda!", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da izmeni ugovor!" + ex.getMessage(), "Greska!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifikacijaUgovoraForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifikacijaUgovoraForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifikacijaUgovoraForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifikacijaUgovoraForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ModifikacijaUgovoraForma().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(ModifikacijaUgovoraForma.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDodajStavku;
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonObrisi;
    private javax.swing.JButton jButtonObrisiStavku;
    private javax.swing.JButton jButtonZavrsiRad;
    private javax.swing.JComboBox<Object> jComboBoxIgraci;
    private javax.swing.JComboBox<Object> jComboBoxNapusteniKlubovi;
    private javax.swing.JComboBox<Object> jComboBoxPridruzeniKlubovi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableStavkeUgovora;
    // End of variables declaration//GEN-END:variables

    private void popuniComboBoxeve() throws Exception {
        igraci = Kontroller.getInstance().ucitajListuIgraca();
        klubovi = Kontroller.getInstance().ucitajListuKlubova();
        jComboBoxIgraci.setModel(new DefaultComboBoxModel<>(igraci.toArray()));
        jComboBoxNapusteniKlubovi.setModel(new DefaultComboBoxModel<>(klubovi.toArray()));
        jComboBoxNapusteniKlubovi.addItem("--Slobodan igrac--");
        jComboBoxPridruzeniKlubovi.setModel(new DefaultComboBoxModel<>(klubovi.toArray()));
        jComboBoxPridruzeniKlubovi.addItem("--Slobodan igrac--");
    }

    public void popuniPoljaBrisanje(Ugovor ugovor) {
        popuniPolja(ugovor);
        jComboBoxNapusteniKlubovi.setEnabled(false);
        jComboBoxPridruzeniKlubovi.setEnabled(false);
        mts = new ModelTabeleStavkaUgovora(ugovor.getStavkeUgovora());
        jTableStavkeUgovora.setModel(mts);
        jTableStavkeUgovora.setEnabled(false);
        jComboBoxIgraci.setEnabled(false);
        jButtonDodajStavku.setEnabled(false);
        jButtonObrisiStavku.setEnabled(false);
    }

    public void popuniPoljaIzmena(Ugovor ugovor) {
        popuniPolja(ugovor);
        mts = new ModelTabeleStavkaUgovora(ugovor.getStavkeUgovora());
        mts.setMuf(this);
        jTableStavkeUgovora.setModel(mts);
        jTableStavkeUgovora.getColumnModel().getColumn(0).setPreferredWidth(10);
    }

    private void popuniPolja(Ugovor ugovor) {
        selektovaniUgovor = ugovor;
        jComboBoxIgraci.setSelectedItem(ugovor.getIgrac());
        for (Klub klub : klubovi) {
            if (klub.getNaziv().equals(ugovor.getOdlazeciKlub().getNaziv())) {
                jComboBoxNapusteniKlubovi.setSelectedItem(ugovor.getOdlazeciKlub());
                break;
            } else {
                jComboBoxNapusteniKlubovi.setSelectedItem("--Slobodan igrac--");
            }
        }
        for (Klub klub : klubovi) {
            if (klub.getNaziv().equals(ugovor.getDolazeciKlub().getNaziv())) {
                jComboBoxPridruzeniKlubovi.setSelectedItem(ugovor.getDolazeciKlub());
                break;
            } else {
                jComboBoxPridruzeniKlubovi.setSelectedItem("--Slobodan igrac--");
            }
        }
    }

    public void prikaziUpozorenje(String warningString) {
        JOptionPane.showMessageDialog(this, warningString, "Upozorenje", JOptionPane.WARNING_MESSAGE);
    }

    void obavestiKorisnika() {
        JOptionPane.showMessageDialog(this, "Sistem je ucitao uovor!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
    }
}
