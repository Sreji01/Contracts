/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.form.gf;

import ui.form.gf.GlavnaForma;
import communication.Odgovor;
import communication.Operacije;
import communication.Zahtev;
import domain.Igrac;
import domain.Klub;
import domain.Pozicija;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import ui.controller.Kontroller;

/**
 *
 * @author Marko
 */
public class IgracForma extends javax.swing.JFrame {

    private GlavnaForma gf;
    private Igrac selektovaniIgrac;

    /**
     * Creates new form IgracForma
     */
    public IgracForma() throws Exception {
        initComponents();
        popuniComboBoxKlubovima();
        jComboBoxKlubovi.setSelectedItem(null);
        jComboBoxKlubovi.addItem("--Slobodan igrac--");
        jComboBoxPozicije.setSelectedItem(null);
        setLocationRelativeTo(null);

    }

    public IgracForma(Igrac selektovaniIgrac) throws Exception {
        initComponents();
        this.selektovaniIgrac = selektovaniIgrac;
        popuniPolja();
        setLocationRelativeTo(null);
        jLabelKlubZvezdica.setVisible(true);
    }

    public GlavnaForma getGf() {
        return gf;
    }

    public void setGf(GlavnaForma gf) {
        this.gf = gf;
    }

    public JButton getjButtonZapamtiIzmena() {
        return jButtonIzmeni;
    }

    public void setjButtonZapamtiIzmena(JButton jButtonZapamtiIzmena) {
        this.jButtonIzmeni = jButtonZapamtiIzmena;
    }

    public JButton getjButtonZapamtiKreiranje() {
        return jButtonZapamti;
    }

    public void setjButtonZapamtiKreiranje(JButton jButtonZapamtiKreiranje) {
        this.jButtonZapamti = jButtonZapamtiKreiranje;
    }

    public JLabel getjLabelKlubZvezdica() {
        return jLabelKlubZvezdica;
    }

    public void setjLabelKlubZvezdica(JLabel jLabelKlubZvezdica) {
        this.jLabelKlubZvezdica = jLabelKlubZvezdica;
    }

    public JComboBox<Object> getjComboBoxKlubovi() {
        return jComboBoxKlubovi;
    }

    public void setjComboBoxKlubovi(JComboBox<Object> jComboBoxKlubovi) {
        this.jComboBoxKlubovi = jComboBoxKlubovi;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBoxPozicije = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldIme = new javax.swing.JTextField();
        jTextFieldDatumRodjenja = new javax.swing.JTextField();
        jTextFieldPrezime = new javax.swing.JTextField();
        jTextFieldVisina = new javax.swing.JTextField();
        jComboBoxKlubovi = new javax.swing.JComboBox<>();
        jButtonZapamti = new javax.swing.JButton();
        jButtonZavrsiRad = new javax.swing.JButton();
        jButtonIzmeni = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabelKlubZvezdica = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Pozicija:");

        jComboBoxPozicije.setModel(new DefaultComboBoxModel<>(Pozicija.values()));

        jLabel2.setText("Ime:");

        jLabel3.setText("Prezime:");

        jLabel4.setText("Datum Rodjenja:");

        jLabel5.setText("Visina:");

        jLabel6.setText("Klub:");

        jComboBoxKlubovi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxKluboviActionPerformed(evt);
            }
        });

        jButtonZapamti.setText("Zapamti");
        jButtonZapamti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZapamtiActionPerformed(evt);
            }
        });

        jButtonZavrsiRad.setText("Zavrsi rad");
        jButtonZavrsiRad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZavrsiRadActionPerformed(evt);
            }
        });

        jButtonIzmeni.setText("Izmeni");
        jButtonIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmeniActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("*");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("*");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("*");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("*");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("*");

        jLabel12.setText("* - obavezna polja");

        jLabelKlubZvezdica.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabelKlubZvezdica.setText("*");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(119, Short.MAX_VALUE)
                .addComponent(jButtonIzmeni)
                .addGap(32, 32, 32)
                .addComponent(jButtonZapamti)
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextFieldVisina, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldPrezime, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldIme, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxPozicije, 0, 168, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jTextFieldDatumRodjenja))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                        .addComponent(jComboBoxKlubovi, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelKlubZvezdica, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonZavrsiRad)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxPozicije, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextFieldVisina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jComboBoxKlubovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelKlubZvezdica))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonZapamti)
                            .addComponent(jButtonIzmeni))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jButtonZavrsiRad))
                        .addGap(16, 16, 16))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonZapamtiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZapamtiActionPerformed
        try {
            String warningString = "";
            String ime = jTextFieldIme.getText();
            if (ime.isEmpty()) {
                warningString += "Polje za ime mora biti popunjeno!" + "\n";
            }
            String prezime = jTextFieldPrezime.getText();
            if (prezime.isEmpty()) {
                warningString += "Polje za prezime mora biti popunjeno!" + "\n";
            }
            Pozicija pozicija = (Pozicija) jComboBoxPozicije.getSelectedItem();
            if (pozicija == null) {
                warningString += "Pozicija mora biti izabrana!" + "\n";
            }
            SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy");
            Date datumRodjenja = null;
            try {
                datumRodjenja = format.parse(jTextFieldDatumRodjenja.getText());
            } catch (ParseException e) {
                warningString += "Datum rodjenja nije u dobrom formatu!" + "\n";
            }
            int visina = 0;
            try {
                visina = Integer.parseInt(jTextFieldVisina.getText());
            } catch (NumberFormatException ex) {
                warningString += "Visina nije u dobrom formatu!" + "\n";
            }
            if (!warningString.equals("")) {
                JOptionPane.showMessageDialog(this, warningString, "Upozorenje", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Klub klub = new Klub();
            if (jComboBoxKlubovi.getSelectedItem() != null) {
                if (jComboBoxKlubovi.getSelectedItem().equals("--Slobodan igrac--")) {
                    klub.setNaziv("--Slobodan igrac--");
                } else {
                    klub = (Klub) jComboBoxKlubovi.getSelectedItem();
                }
            } else {
                klub = null;
            }
            Igrac igrac = new Igrac(-1, ime, prezime, pozicija, datumRodjenja, visina, klub);
            Kontroller.getInstance().zapamtiIgraca(igrac);
            isprazniPolja();
            gf.postaviUkupanBrojIgraca();
            gf.osveziTabeluDodatIgrac();
            JOptionPane.showMessageDialog(this, "Sistem je zapamtio igraca!", "Obavestenje!", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da zapamti igraca!" + ex.getMessage(), "Greska!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonZapamtiActionPerformed

    private void jComboBoxKluboviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxKluboviActionPerformed

    }//GEN-LAST:event_jComboBoxKluboviActionPerformed

    private void jButtonZavrsiRadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZavrsiRadActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonZavrsiRadActionPerformed

    private void jButtonIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmeniActionPerformed
        try {
            int id = selektovaniIgrac.getId();
            String warningString = "";
            String ime = jTextFieldIme.getText();
            if (ime.isEmpty()) {
                warningString += "Polje za ime mora biti popunjeno!" + "\n";
            }
            String prezime = jTextFieldPrezime.getText();
            if (prezime.isEmpty()) {
                warningString += "Polje za prezime mora biti popunjeno!" + "\n";
            }
            Pozicija pozicija = (Pozicija) jComboBoxPozicije.getSelectedItem();
            if (pozicija == null) {
                warningString += "Pozicija mora biti izabrana!" + "\n";
            }
            SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy");
            Date datumRodjenja = null;
            try {
                datumRodjenja = format.parse(jTextFieldDatumRodjenja.getText());
            } catch (ParseException e) {
                warningString += "Datum rodjenja nije u dobrom formatu!" + "\n";
            }
            int visina = 0;
            try {
                visina = Integer.parseInt(jTextFieldVisina.getText());
            } catch (NumberFormatException ex) {
                warningString += "Visina nije u dobrom formatu!" + "\n";
            }
            if (!warningString.equals("")) {
                JOptionPane.showMessageDialog(this, warningString, "Upozorenje", JOptionPane.WARNING_MESSAGE);
                return;
            }
            Klub klub = new Klub();
            if (jComboBoxKlubovi.getSelectedItem() != null) {
                if (jComboBoxKlubovi.getSelectedItem().equals("--Slobodan igrac--")) {
                    klub.setNaziv("--Slobodan igrac--");
                } else {
                    klub = (Klub) jComboBoxKlubovi.getSelectedItem();
                }
            } else {
                klub = null;
            }
            Igrac igrac = new Igrac(id, ime, prezime, pozicija, datumRodjenja, visina, klub);
            Kontroller.getInstance().izmeniIgraca(igrac);
            gf.osveziTabelu();
            JOptionPane.showMessageDialog(this, "Sistem je izmenio igraca!", "Obavestenje!", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da izmeni igraca!" + ex.getMessage(), "Greska!", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IgracForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IgracForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IgracForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IgracForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new IgracForma().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(IgracForma.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIzmeni;
    private javax.swing.JButton jButtonZapamti;
    private javax.swing.JButton jButtonZavrsiRad;
    private javax.swing.JComboBox<Object> jComboBoxKlubovi;
    private javax.swing.JComboBox<Object> jComboBoxPozicije;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelKlubZvezdica;
    private javax.swing.JTextField jTextFieldDatumRodjenja;
    private javax.swing.JTextField jTextFieldIme;
    private javax.swing.JTextField jTextFieldPrezime;
    private javax.swing.JTextField jTextFieldVisina;
    // End of variables declaration//GEN-END:variables

    private void popuniComboBoxKlubovima() throws Exception {
        List<Klub> klubovi = Kontroller.getInstance().ucitajListuKlubova();
        Collections.sort(klubovi);
        jComboBoxKlubovi.setModel(new DefaultComboBoxModel<>(klubovi.toArray()));
    }

    private void isprazniPolja() {
        jTextFieldIme.setText("");
        jTextFieldPrezime.setText("");
        jTextFieldDatumRodjenja.setText("");
        jComboBoxKlubovi.setSelectedItem(null);
        jComboBoxPozicije.setSelectedItem(null);
        jTextFieldVisina.setText("");
    }

    private void popuniPolja() throws Exception {
        jTextFieldIme.setText(selektovaniIgrac.getIme());
        jTextFieldPrezime.setText(selektovaniIgrac.getPrezime());
        jComboBoxPozicije.setSelectedItem(selektovaniIgrac.getPozicija());
        jTextFieldVisina.setText(selektovaniIgrac.getVisina() + "");
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd.MM.yyyy");
        String datumRodjenjaString = dateFormat.format(selektovaniIgrac.getDatumRodjenja());
        jTextFieldDatumRodjenja.setText(datumRodjenjaString);
        popuniComboBoxKlubovima();
        jComboBoxKlubovi.addItem("--Slobodan igrac--");
        if (selektovaniIgrac.getKlub() == null) {
            jComboBoxKlubovi.setSelectedItem("--Slobodan igrac--");
        } else {
            jComboBoxKlubovi.setSelectedItem(selektovaniIgrac.getKlub());
        }
    }

    void obavestiKorisnika() {
        JOptionPane.showMessageDialog(this, "Sistem je ucitao igraca!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);

    }
}
